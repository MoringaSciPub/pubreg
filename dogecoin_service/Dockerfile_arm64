# we start with the download of the excecutable
FROM debian:bullseye as build

RUN apt-get update && apt-get install -y \
    wget
        
RUN apt-get install -y make automake cmake curl libtool \
                    binutils-gold bsdmainutils pkg-config python3 patch bison
RUN apt-get install -y build-essential autotools-dev \
                     libssl-dev libevent-dev 
#RUN apt-get install -y libdb5.3++-dev libdb5.3++ libdb5.3-dev  #TODO check if compiles without it


WORKDIR /app

#RUN wget https://github.com/dogecoin/dogecoin/releases/download/v1.10.0-dogeparty/dogecoin-1.10.0-linux64.tar.gz
#RUN wget https://github.com/dogecoin/dogecoin/releases/download/v1.14.0/dogecoin-1.14.2-x86_64-linux-gnu.tar.gz
#RUN wget https://github.com/dogecoin/dogecoin/releases/download/v1.14.2/dogecoin-1.14.2-x86_64-linux-gnu.tar.gz
RUN wget https://github.com/dogecoin/dogecoin/archive/refs/tags/v1.14.6.tar.gz

#RUN tar xfv dogecoin-1.10.0-linux64.tar.gz
#RUN ls dogecoin-1.10.0/bin/
#RUN tar xfv dogecoin-1.14.2-x86_64-linux-gnu.tar.gz

RUN tar xvf v1.14.6.tar.gz

WORKDIR /app/dogecoin-1.14.6/depends
RUN make download HOST=aarch64-linux-gnu NO_QT=1 MULTIPROCESS=1
RUN make HOST=aarch64-linux-gnu NO_QT=1 MULTIPROCESS=1

WORKDIR /app/dogecoin-1.14.6

RUN ./autogen.sh
RUN CONFIG_SITE=$PWD/depends/aarch64-linux-gnu/share/config.site ./configure --prefix=/
RUN make
#RUN ls -la
RUN ls -la src/
RUN ls -la depends/built/aarch64-linux-gnu/
#RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# now we make the actual image with the excecutable

FROM debian:bullseye-slim

COPY --from=build /app/dogecoin-1.14.6/src/dogecoind /usr/local/bin/
COPY --from=build /app/dogecoin-1.14.6/src/dogecoin-cli /usr/local/bin/
COPY --from=build /app/dogecoin-1.14.6/src/*.a /usr/local/lib/
COPY --from=build /app/dogecoin-1.14.6/depends/aarch64-linux-gnu/lib* /usr/local/lib/

RUN ls -la  /usr/local/bin/

ADD dogecoin.conf /config/dogecoin.conf


# add a path top the dogecoin-directory
ENV DOGECOIN_PATH /data/dogecoin
RUN mkdir -p ${DOGECOIN_PATH}
# add it as volume
VOLUME /data/dogecoin


# Swarm TCP; should be exposed to the public
EXPOSE 22556
# Daemon RPC; must not be exposed publicly but to client services under you control
# EXPOSE 22555
ENV USERID 1000
RUN adduser --shell /bin/false --gecos '' --disabled-password --uid $USERID dogecoind
RUN chown -R dogecoind:dogecoind /data/dogecoin
RUN chown -R dogecoind /config

RUN ls -la /usr/local/bin/dogecoind
#RUN /usr/local/bin/dogecoind

#
ENTRYPOINT ["/usr/local/bin/dogecoind", "-datadir=/data/dogecoin", "-conf=/config/dogecoin.conf", "-server"]
#ENTRYPOINT ["/usr/local/bin/dogecoind", "-datadir=/data/dogecoin", "-conf=/config/dogecoin.conf", "-server", "-testnet"]
